###
## ProductClient.jar configuration file
##


###
## GLOBALS
##
## These properties must appear before any configuration [sections].
## (Otherwise they would be considered section properties)
#


## NotificationListeners are notified when new products arrive
# a comma delimited list of section names
listeners = indexer


## NotificationReceivers receive notification from hubs when new products arrive
# a comma delimited list of section names
# NOTE: most users should NOT change this
# For PDL client 2.X using on-premise hubs
##  receivers = receiver_pdl
# For PDL client 3.X using cloud hubs
receivers = receiver_aws


##  ## ProductSenders are used when creating and sending products for distribution
##  # a comma delimited list of section names
##  # NOTE: most users should NOT change this
##  senders = sender_prod01, sender_prod02


## directory where log files are written
# (default = log)
logdirectory = /data/aafs/pdldata/log


## how verbose of log messages to include
# (default = INFO), one of SEVERE, WARNING, INFO, CONFIG, FINE, FINER, FINEST
loglevel = INFO


## whether to sent console output to the log file
# (default = false)
redirectconsole = true


## whether to send tracker updates when products are received and processed
# (default = false)
enableTracker = false


## whether to enable zabbix agent for monitoring
# (default = false)
enableZabbix = false


## port zabbix agent listens
# (default = 10052)
zabbixPort = 10052


## used when sending products
trackerURL = http://ehppdl1.cr.usgs.gov/tracker/


###
## RECEIVERS
##
## Receivers receive notifications about products that are available.
## They notify their listeners, who may request products be downloaded.
#


##  ## most clients use this receiver, for PDL client 2.X using on-premise hubs
##  [receiver_pdl]
##  type = gov.usgs.earthquake.distribution.EIDSNotificationReceiver
##  storage = receiver_storage
##  index = receiver_index
##  serverHost = prod01-pdl01.cr.usgs.gov
##  serverPort = 39977
##  alternateServers = prod02-pdl01.cr.usgs.gov:39977
##  trackingfile = /data/aafs/pdldata/receiver_pdl_tracking.dat
##  ## how long to wait before checking for expired products
##  ## 900000 milliseconds = 15 minutes
##  cleanupInterval = 900000
##  ## how old products are before considered expired
##  ## 900000 milliseconds = 15 minutes
##  storageage = 900000

## For PDL client 3.X using cloud hubs
[receiver_aws]
type = gov.usgs.earthquake.aws.AwsProductReceiver
index = receiver_index
storage = receiver_storage
# Parameters below are specific to an AwsProductReceiver
# Where productsCreatedAfterClient references the products_created_after subsection
productsCreatedAfterClient = products_created_after
initialCatchUpAge = 0.25
anyMessageInterval = 480000
trackingFileName = /data/aafs/pdldata/receiver_tracking.db
# URL specific to the new Realtime Cloud PDL Hub
url = wss://earthquake.usgs.gov/pdl/east/products/notifications/subscribe

[products_created_after]
type = gov.usgs.earthquake.aws.ProductsCreatedAfterClient
batchLimit = 50
maxRetryAttempts = 5
# URL template specific to the new Realtime Cloud PDL Hub
urlTemplate = https://earthquake.usgs.gov/pdl/east/products/notifications?broadcastafter={CREATED_AFTER}&limit={BATCH_LIMIT}


## Common to both 2.X and 3.X
[receiver_index]
type = gov.usgs.earthquake.distribution.JDBCNotificationIndex
indexfile = /data/aafs/pdldata/receiver_index.db

## For PDL client 2.X, probably usable with 3.X also, stores products in the filesystem
[receiver_storage]
type = gov.usgs.earthquake.distribution.FileProductStorage
directory = /data/aafs/pdldata/receiver_storage
#verifySignatures = true
## when verifying signatures, keys must be configured in the keychain
#keychain = key1, key2, ...

##  ## For PDL client 3.X, stores products in a database
##  [receiver_storage]
##  type = gov.usgs.earthquake.aws.JsonProductStorage
##  table = /data/aafs/pdldata/receiver_storage





###
## SENDERS
##
## Senders send products to hubs for Product Creators.
#


##  [sender_prod01]
##  type = gov.usgs.earthquake.distribution.SocketProductSender
##  host = prod01-pdl01.cr.usgs.gov
##  port = 11235
##  
##  
##  [sender_prod02]
##  type = gov.usgs.earthquake.distribution.SocketProductSender
##  host = prod02-pdl01.cr.usgs.gov
##  port = 11235


###
## LISTENERS
##
## Listeners are how some users integrate applications with PDL.
#


# ## this listener prints information about received products to the console
# ## it is mainly used as an out-of-the-box demonstration
# [listener_default]
# type = gov.usgs.earthquake.distribution.DefaultNotificationListener
# 
# 
# ## this listener runs an executable anytime a product is received
# [listener_exec]
# type = gov.usgs.earthquake.distribution.ExternalNotificationListener
# command = /path/to/executable
# ## each exec type listener MUST have its own storage
# storage = listener_exec_storage
# ## It usually only makes sense to configure include Or exclude, not both.
# ## a comma delimited list of product types to deliver
# # includeTypes =
# ## a comma delimited list of product types to NOT deliver
# # excludeTypes =
# 
# 
# [listener_exec_storage]
# type = gov.usgs.earthquake.distribution.FileProductStorage
# directory = /path/to/storage





###
## INDEXER
##
## The indexer is a more useful listener that keeps track of received products,
## builds a catalog, and provides meaningful information about how that catalog is
## changing.  The indexer eliminates duplicates, and determines which products are
## considered preferred.
#


[indexer]
type = gov.usgs.earthquake.indexer.Indexer
storage = indexer_storage
index = indexer_index
modules = indexer_module_shakemap, indexer_module_momenttensor
## a comma delimited list of sections to load as IndexerListeners
listeners = indexer_listener_exec
archivePolicy = policyOldEvents, policyOldProducts, policyOldProductVersions
## a comma delimited list of product types to deliver
## the sample config doesn't mention this option, but the code looks like this should work
includeTypes = origin, associate, disassociate, trump, trump-origin, phase-data, trump-phase-data

[policyOldEvents]
; remove events after one month
type = gov.usgs.earthquake.indexer.ArchivePolicy
minEventAge = 2592000000

[policyOldProducts]
; remove unassociated products after one week
type = gov.usgs.earthquake.indexer.ProductArchivePolicy
minEventAge = 604800000
onlyUnassociated = true

[policyOldProductVersions]
; remove old versions of products after one hour
type = gov.usgs.earthquake.indexer.ProductArchivePolicy
minEventAge = 3600000
onlySuperseded = true


[indexer_storage]
type = gov.usgs.earthquake.distribution.FileProductStorage
directory = /data/aafs/pdldata/indexer_storage


[indexer_index]
type = gov.usgs.earthquake.indexer.JDBCProductIndex
## connect to any JDBC supported database.  The database driver must be on the classpath,
## and should already have the schema setup.
### sqlite
indexfile = /data/aafs/pdldata/indexer_index.db
### mysql
#driver=com.mysql.jdbc.Driver
#url = jdbc:mysql://HOST/DBNAME?user=USERNAME&password=PASSWORD
### oracle
#driver = oracle.jdbc.driver.OracleDriver
#url = jdbc:oracle:thin:USERNAME/PASSWORD@HOST:PORT:DBNAME



; the shakemap module adds several properties from grid.xml including "map-status" and extents like "minimum-longitude"
[indexer_module_shakemap]
type = gov.usgs.earthquake.shakemap.ShakeMapIndexerModule


; the moment-tensor module adjusts the weight of a product based on location,
; type, and source
[indexer_module_momenttensor]
type = gov.usgs.earthquake.momenttensor.MTIndexerModule


[indexer_listener_exec]
type = gov.usgs.earthquake.indexer.ExternalIndexerListener
command = /opt/aafs/intake/listener.sh
## each exec type listener MUST have its own storage
storage = indexer_listener_exec_storage
## It usually only makes sense to configure include Or exclude, not both.
## a comma delimited list of product types to deliver
includeTypes = origin, associate, disassociate, trump, trump-origin, phase-data, trump-phase-data
## a comma delimited list of product types to NOT deliver
# excludeTypes =
## whether to re-process products that have already been processed
processDuplicateProducts = false
## whether to process only preferred products
processPreferredOnly = false
## Whether to ignore updates that do not change an events preferred location (time, latitude, longitude, depth, magnitude)
# processOnlyWhenEventChanged = false;


[indexer_listener_exec_storage]
type = gov.usgs.earthquake.distribution.FileProductStorage
directory = /data/aafs/pdldata/indexer_listener_exec_storage
